@page
@model RWM_Database.Pages.Forms.CreateWasteFormModel
@{
    ViewData["Title"] = "CreateWasteForm";
}

@section scripts
{
    <script src="@Url.Content("~/js/volume.js")"></script>
}


<link rel="stylesheet" href="~/css/create_form.css">

<b style="font-size: 26px">Radioactive Material Declaration Form</b>



<form class="form" method="post" id="create_form">

    <header>Item Information</header>
    <div class="information-container" id="styled_form">

        <label for="DeclarationNumber">Declaration Number:</label>

        <div data-tip="@Settings.GetStringSetting("Item_Declaration_Number_Tip")">

            @{
                var itemDeclarationNumberFormatLength1 = @Settings.GetIntegerSetting("Item_Declaration_Number_Format_Length_1");
                var itemDeclarationNumberFormatLength2 = @Settings.GetIntegerSetting("Item_Declaration_Number_Format_Length_2");
            }

            <input type="text" id="DeclarationNumber" name="DeclarationNumber" size="45" required
                   maxlength="@Settings.GetIntegerSetting("Item_Declaration_Number_Length")"
                   pattern="^\d{@itemDeclarationNumberFormatLength1}-\d{@itemDeclarationNumberFormatLength2}$">
        </div>



        <label for="ItemDescription">Item Description:</label>

        <div data-tip="@Settings.GetStringSetting("Item_Description_Tip")">
            <input type="text" id="ItemDescription" name="ItemDescription" size="45" required maxlength="300">
        </div>


        <label for="Location">Location:</label>

        <div data-tip="@Settings.GetStringSetting("Item_Location_Tip")">
            <input type="text" id="Location" name="Location" size="45" required maxlength="45">
        </div>



        <label for="AccountNumber">Account Number:</label>

        <div data-tip="@Settings.GetStringSetting("Item_Account_Number_Tip")">
            @{
                var accountFormatLength1 = @Settings.GetIntegerSetting("Item_Account_Number_Format_Length_1");
                var accountFormatLength2 = @Settings.GetIntegerSetting("Item_Account_Number_Format_Length_2");
            }
            <input type="text" id="AccountNumber" name="AccountNumber" size="45" required
                   maxlength="@Settings.GetIntegerSetting("Item_Account_Number_Length")"
                   pattern="^\d{@accountFormatLength1}-[a-zA-Z0-9]{@accountFormatLength2}$">
        </div>



        <label for="HazardousMaterial">Hazardous Material:</label>
        <select id="HazardousMaterial" name="HazardousMaterial">
            <option value="0">No</option>
            <option value="1">Yes</option>
        </select>

        <label for="SealedSource">Sealed Source:</label>
        <select id="SealedSource" name="SealedSource">
            <option value="0">No</option>
            <option value="1">Yes</option>
        </select>


        <label for="GeneratorId">Generator Name:</label>

        <select id="GeneratorId" name="GeneratorId">
            @foreach (var person in @Model.people)
            {
                <option value="@person.PeopleId">@person.FirstName @person.LastName</option>
            }
        </select>


        <label for="GenerationDate">Generation Date:</label>
        <input type="date" id="GenerationDate" name="GenerationDate" size="45" required>


        <label for="RecievedBy">Recieved By:</label>

        <select id="RecievedBy" name="RecievedBy">
            @foreach (var person in @Model.people)
            {
                <option value="@person.PeopleId">@person.FirstName @person.LastName</option>
            }
        </select>


        <label for="RecievedDate">Recieved Date:</label>
        <input type="date" id="RecievedDate" name="RecievedDate" size="45" required>

    </div>

    <header>Packing Specifications</header>
    <div class="information-container" id="styled_form">

        <label for="ContainerId">Select Container:</label>

        @foreach (int container in @Model.ContainerHandler.PackedContainers.Keys)
        {
            var usedVolume = @Model.ContainerHandler.GetUsedVolume(container);
            var totalVolume = @Model.ContainerHandler.GetTotalVolume(container);
            <input type="hidden" id="hidden_used_@container" name="containerValue" value="@usedVolume">
            <input type="hidden" id="hidden_total_@container" name="containerValue" value="@totalVolume">
        }

        <select id="ContainerId" name="ContainerId" onchange="calcAddedVolume()">
            <option value="-1">None</option>
            @foreach (int container in @Model.ContainerHandler.PackedContainers.Keys)
            {
                var usedVolume = @Model.ContainerHandler.GetPercentUsedVolume(container);
                var containerNumber = Model.ContainerHandler.PackedContainers[container].ContainerNumber;
                <option value="@container">@containerNumber &emsp; @usedVolume% capacity</option>
            }
        </select>

        <label for="Length">Item Length:</label>
        <div data-tip="@Settings.GetStringSetting("Item_Length_Tip")">
            <input type="number" id="Length" name="Length" onkeyup="volume()" size="45" required>
        </div>

        <label for="Width">Item Width:</label>
        <div data-tip="@Settings.GetStringSetting("Item_Width_Tip")">
            <input type="number" id="Width" name="Width" onkeyup="volume()" size="45" required>
        </div>

        <label for="Height">Item Height:</label>
        <div data-tip="@Settings.GetStringSetting("Item_Height_Tip")">
            <input type="number" id="Height" name="Height" onkeyup="volume()" size="45" required>
        </div>


    </div>

    <header>Calculated Volume</header>
    <div class="information-container-units" id="styled_form">

        <label>Item Volume:</label>
        <p id="Volume"></p>
        <p>ft&sup3</p>

        <label>Container Volume Before Adding Item:</label>
        <p id="PreviousVolume"></p>
        <p>ft&sup3</p>

        <label>Container Volume After Adding Item:</label>
        <p id="PostVolume"></p>
        <p>ft&sup3</p>

        <label>Volume Filled:</label>
        <p id="PercentFilled"></p>
        <p>%</p>

    </div>



    <input type="submit" value="Submit Form" asp-page-handler="SubmitButton" />
</form>


