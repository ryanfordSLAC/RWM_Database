@page
@model RWM_Database.Pages.Forms.Shipment.PreviewShipmentModel
@{
    ViewData["Title"] = "PreviewShipment";
}

@section scripts
{
    <script src="@Url.Content("~/js/drop_menu.js")"></script>
}

<link rel="stylesheet" href="~/css/view_item.css">
<div id="styled_item">
    @{
        var shipmentData = Model.Shipment;


        <header>Shipment Information </header>

        <div class="information-container" id="styled_item">
            <label>Shipment Number:</label>
            <p>@shipmentData.ShipmentNumber</p>

            <label>Shipment Type:</label>
            <p>@shipmentData.ShipmentTypeName</p>

        </div>

        <header>Content Details </header>

        <div class="information-container" id="styled_item">

            @{
                var usedVolume = @Model.ShipmentContainers.GetUsedVolumeAllContainers();
                var totalShipmentVolume = @Model.Shipment.ShipmentMaxVolume;
                var capacityUsed = (usedVolume / totalShipmentVolume) * 100;

                <label>Used Volume:</label>
                <p>@usedVolume.ToString("F") ft&sup3</p>

                <label>Total Shipment Volume:</label>
                <p>@totalShipmentVolume.ToString("F") ft&sup3</p>

                <label>Capacity Used:</label>
                <p>@capacityUsed.ToString("F") %</p>
            }

        </div>

        <header>Containers Included</header>

        <div class="table-container" id="styled_item">
            <link rel="stylesheet" href="~/css/table.css">
            <table id="styled_table">
                <tr>
                    <th>Container Number</th>
                    <th>Volume Used</th>
                    <th>Total Volume</th>
                    <th>Percent Filled</th>
                </tr>
                @{
                    var paginatedTable = Model.PaginatedTable;

                    int start = (Model.CurrentPage - 1) * paginatedTable.PageSize;
                    if (start < 0)
                    {
                        start = 0;
                    }
                    var containerList = Model.ShipmentContainers.PackedContainers.Keys.ToList<int>();

                    for (int i = start; i < start + paginatedTable.PageSize; i++)
                    {
                        if (i >= containerList.Count)
                        {
                            break;
                        }
                        var container = containerList[i];
                        var containerNumber = Model.ShipmentContainers.PackedContainers[container].ContainerNumber;
                        var volumedUsed = Model.ShipmentContainers.GetUsedVolume(container);
                        var totalVolume = Model.ShipmentContainers.GetTotalVolume(container);
                        var percentFilled = Model.ShipmentContainers.GetPercentUsedVolume(container);


                        <tr>
                            <td><a href="/Forms/Container/ViewContainer?ContainerId=@container">@containerNumber</a></td>
                            <td>@volumedUsed.ToString("F") ft&sup3</td>
                            <td>@totalVolume.ToString("F") ft&sup3</td>
                            <td>@percentFilled.ToString("F") %</td>
                        </tr>
                    }
                }

            </table>

        </div>
    }

</div>

<link rel="stylesheet" href="~/css/drop_down.css">
<div class="dropdown">
    <button onclick="myFunction('myDropdown1')" class="dropbtn">Add Container</button>
    <div id="myDropdown1" class="dropdown-content">
        <input type="text" placeholder="Search.." id="myInput1" onkeyup="filterFunction('myDropdown1', 'myInput1')">
        @{
            foreach (string containerNumber in Model.ContainersMap.Keys)
            {
                <a asp-page-handler="SubmitContainer" asp-route-containerId="@Model.ContainersMap[containerNumber]" asp-route-shipmentId="@Model.ShipmentId">@containerNumber</a>
            }
        }
    </div>
</div>

<link rel="stylesheet" href="~/css/drop_down.css">
<div class="dropdown">
    <button onclick="myFunction('myDropdown2')" class="dropbtn" style="background-color: #db144c">Remove Container</button>
    <div id="myDropdown2" class="dropdown-content">
        <input type="text" placeholder="Search.." id="myInput2" onkeyup="filterFunction('myDropdown2', 'myInput2')">
        @{
            foreach (int containerId in Model.ShipmentContainers.PackedContainers.Keys)
            {
                <a asp-page-handler="RemoveContainer" asp-route-containerId="@containerId" asp-route-shipmentId="@Model.ShipmentId">@Model.ShipmentContainers.PackedContainers[containerId].ContainerNumber</a>
            }
        }
    </div>
</div>

<link rel="stylesheet" href="~/css/view_item.css">
<div class="table-container" id="styled_item">
    <header>Attachments</header>

    <link rel="stylesheet" href="~/css/table.css">
    <table id="styled_table">
        <tr>
            <th>File Name</th>
            <th>Date Submitted</th>
            <th>Submitted By</th>
        </tr>

        @{
            for (int i = 0; i < Model.AttachmentList.Count; i++)
            {
                var attachment = Model.AttachmentList[i];
                <tr>
                    <td><a href="/Attachment/ViewAttachment?FileId=@attachment.GetAttachmentId()" id="fileName">@attachment.GetAttachmentName()</a></td>
                    <td>@attachment.GetAttachmentDate()</td>
                    <td>@attachment.GetAttachmentCreator()</td>
                </tr>
            }
        }

    </table>


    <link rel="stylesheet" href="~/css/upload_button.css">

    <form method="post" enctype="multipart/form-data" id="upload_button">
        <label>Attachment Type:</label>
        <select id="AttachmentType" name="AttachmentType">
            @{
                var defaultOption = @Settings.GetStringSetting("Shipment_Attachment_Type");

                foreach (int attachmentType in @Model.attachmentTypes.Keys)
                {
                    var val = Model.attachmentTypes[attachmentType];
                    if (val == defaultOption)
                    {
                        <option selected value="@attachmentType">@defaultOption</option>
                    }

                }

            }

            @foreach (int attachmentType in @Model.attachmentTypes.Keys)
            {
                //if (Model.attachmentTypes[attachmentType] == defaultOption) continue;
                //<option value="@attachmentType">@Model.attachmentTypes[attachmentType]</option>
            }
        </select>
        <br />
        <input type="file" asp-for="File" />
        <input type="submit" value="Submit Attachment" id="upload_button" />
    </form>
</div>